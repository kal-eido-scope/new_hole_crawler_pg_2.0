{"code": 0, "data": {"allow_search": true, "attention": false, "author_title": null, "blocked": false, "blocked_count": null, "can_del": false, "comments": [{"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 320646, "create_time": 1659195320, "is_blocked": false, "is_tmp": false, "name_id": 1, "text": "System.out.println(“This is produced by C++”);", "timestamp": 1659195320}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 320654, "create_time": 1659195514, "is_blocked": false, "is_tmp": false, "name_id": 2, "text": "std::cout << \"This is produced by C++\" << std::endl;", "timestamp": 1659195514}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 320677, "create_time": 1659196161, "is_blocked": false, "is_tmp": false, "name_id": 0, "text": "$\\color{#ff0000}{\\mathrm{B}}\\color{#f42700}{\\mathrm{u}}\\color{#e94f00}{\\mathrm{t}}\\color{#dd7700}{\\mathrm{\\ }}\\color{#d29f00}{\\mathrm{C}}\\color{#b6b800}{\\mathrm{h}}\\color{#88c400}{\\mathrm{i}}\\color{#5bcf00}{\\mathrm{n}}\\color{#2ddb00}{\\mathrm{e}}\\color{#00e600}{\\mathrm{s}}\\color{#00db2d}{\\mathrm{e}}\\color{#00cf5b}{\\mathrm{\\ }}\\color{#00c488}{\\mathrm{i}}\\color{#00b8b6}{\\mathrm{s}}\\color{#009fd2}{\\mathrm{\\ }}\\color{#0077dd}{\\mathrm{s}}\\color{#004fe9}{\\mathrm{t}}\\color{#0027f4}{\\mathrm{i}}\\color{#0000ff}{\\mathrm{l}}\\color{#3300fa}{\\mathrm{l}}\\color{#6600f4}{\\mathrm{\\ }}\\color{#9900ee}{\\mathrm{n}}\\color{#cc00e9}{\\mathrm{o}}\\color{#e900cc}{\\mathrm{t}}\\color{#ee0099}{\\mathrm{\\ }}\\color{#f40066}{\\mathrm{s}}\\color{#fa0033}{\\mathrm{u}}\\color{#ff0000}{\\mathrm{p}}\\color{#f42700}{\\mathrm{p}}\\color{#e94f00}{\\mathrm{o}}\\color{#dd7700}{\\mathrm{r}}\\color{#d29f00}{\\mathrm{t}}\\color{#b6b800}{\\mathrm{e}}\\color{#88c400}{\\mathrm{d}}\\color{#5bcf00}{\\mathrm{.}}$", "timestamp": 1659196161}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 320699, "create_time": 1659197077, "is_blocked": false, "is_tmp": false, "name_id": 3, "text": "来个源码？我正好和Python那个对比一下", "timestamp": 1659197077}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 320704, "create_time": 1659197297, "is_blocked": false, "is_tmp": false, "name_id": 0, "text": "```\n#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nstring prefix = \"\\\\color{\";\nstring joint = \"}{\";\nstring postfix[] = {\"}\", \"}}\"};\nstring math_pref[] = {\"\", \"\\\\mathrm{\"};\nvector<string> colors = {\"#ff0000\", \"#f42700\", \"#e94f00\", \"#dd7700\",\n                         \"#d29f00\", \"#b6b800\", \"#88c400\", \"#5bcf00\",\n                         \"#2ddb00\", \"#00e600\", \"#00db2d\", \"#00cf5b\",\n                         \"#00c488\", \"#00b8b6\", \"#009fd2\", \"#0077dd\",\n                         \"#004fe9\", \"#0027f4\", \"#0000ff\", \"#3300fa\",\n                         \"#6600f4\", \"#9900ee\", \"#cc00e9\", \"#e900cc\",\n                         \"#ee0099\", \"#f40066\", \"#fa0033\"};\nvector<char> esc_char = {' ', '\\\\', '{', '}', '#', '$', '%', '&', '_'};\nvector<char> forbid_char = {'^'};\n\nint main()\n{\n    string origin_text;\n    string rainbow_text = \"$\";\n\n    string cmathrm;\n    int mathrm = 1;\n\n    cout << \"Your text: \";\n    getline(cin, origin_text);\n\n    cout << \"Enable mathrm?(y/n): \";\n    getline(cin, cmathrm);\n\n    if (cmathrm == \"n\" || cmathrm == \"N\")\n    {\n        mathrm = 0;\n    }\n\n    for (int i = 0; i < origin_text.length(); i++)\n    {\n        rainbow_text += (prefix + colors[i % colors.size()] +\n                         joint + math_pref[mathrm]);\n\n        auto Finder = [origin_text, i](char c) -> bool\n        { return origin_text[i] == c; };\n\n        if (any_of(forbid_char.begin(), forbid_char.end(), Finder))\n        {\n            i++;\n        }\n        if (any_of(esc_char.begin(), esc_char.end(), Finder))\n        {\n            rainbow_text += \"\\\\\";\n        }\n        rainbow_text += origin_text[i] + postfix[mathrm] + \"\\n\";\n    }\n    rainbow_text[rainbow_text.length() - 1] = '$';\n    cout << \"Rainbow text code:\" << endl << rainbow_text << endl;\n    system(\"pause\");\n    return 0;\n}\n```", "timestamp": 1659197297}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 320705, "create_time": 1659197323, "is_blocked": false, "is_tmp": false, "name_id": 0, "text": "写的比较笨，献丑了", "timestamp": 1659197323}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 320720, "create_time": 1659197802, "is_blocked": false, "is_tmp": false, "name_id": 0, "text": "这个^和~不太好处理，还有点问题", "timestamp": 1659197802}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 320751, "create_time": 1659198715, "is_blocked": false, "is_tmp": false, "name_id": 0, "text": "```\n#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nstring prefix = \"\\\\color{\";\nstring joint = \"}{\";\nstring postfix[] = {\"}\", \"}}\"};\nstring math_pref[] = {\"\", \"\\\\mathrm{\"};\nvector<string> colors = {\"#ff0000\", \"#f42700\", \"#e94f00\", \"#dd7700\",\n                         \"#d29f00\", \"#b6b800\", \"#88c400\", \"#5bcf00\",\n                         \"#2ddb00\", \"#00e600\", \"#00db2d\", \"#00cf5b\",\n                         \"#00c488\", \"#00b8b6\", \"#009fd2\", \"#0077dd\",\n                         \"#004fe9\", \"#0027f4\", \"#0000ff\", \"#3300fa\",\n                         \"#6600f4\", \"#9900ee\", \"#cc00e9\", \"#e900cc\",\n                         \"#ee0099\", \"#f40066\", \"#fa0033\"};\nvector<char> esc_char = {' ', '\\\\', '{', '}', '#', '$', '%', '&', '_'};\nvector<char> forbid_char = {'^', '~'};\n\nint main()\n{\n    string origin_text;\n    string rainbow_text = \"$\";\n\n    string cmathrm;\n    int mathrm = 1;\n\n    cout << \"Your text: \";\n    getline(cin, origin_text);\n\n    cout << \"Enable mathrm?(y/n): \";\n    getline(cin, cmathrm);\n\n    if (cmathrm == \"n\" || cmathrm == \"N\")\n    {\n        mathrm = 0;\n    }\n\n    int color = 0;\n    for (int i = 0; i < origin_text.length(); i++)\n    {\n        auto Finder = [origin_text, i](char c) -> bool\n        { return origin_text[i] == c; };\n\n        if (any_of(forbid_char.begin(), forbid_char.end(), Finder))\n        {\n            continue;\n        }\n\n        rainbow_text += (prefix + colors[j % colors.size()] +\n                         joint + math_pref[mathrm]);\n\n        if (any_of(esc_char.begin(), esc_char.end(), Finder))\n        {\n            rainbow_text += \"\\\\\";\n        }\n        \n        rainbow_text += origin_text[i] + postfix[mathrm] + \"\\n\";\n        color++;\n    }\n    rainbow_text[rainbow_text.length() - 1] = '$';\n\n    cout << \"Rainbow text code:\" << endl << rainbow_text << endl;\n    system(\"pause\");\n    return 0;\n}\n```", "timestamp": 1659198715}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 320752, "create_time": 1659198760, "is_blocked": false, "is_tmp": false, "name_id": 0, "text": "有些改动", "timestamp": 1659198760}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 320808, "create_time": 1659199980, "is_blocked": false, "is_tmp": false, "name_id": 0, "text": "python版也改了一些地方\n```\n# @author: GoodNullName\n# @note: put your words in the string below,\n#        and copy the output to where supports md&LaTeX\n\nimport os\n\n\n# PUT YOUR WORDS DOWN HERE!\nYourRainbowText = \"test text\"\n\n\nclass RainbowText:\n\n    __prefix = \"\\\\color{\"\n    __joint = \"}{\"\n    __postfix = (\"}\", \"}}\")\n    __mathpref = (\"\", \"\\\\mathrm{\")\n    __rainbowColors = (\"#ff0000\", \"#f42700\", \"#e94f00\", \"#dd7700\",\n                       \"#d29f00\", \"#b6b800\", \"#88c400\", \"#5bcf00\",\n                       \"#2ddb00\", \"#00e600\", \"#00db2d\", \"#00cf5b\",\n                       \"#00c488\", \"#00b8b6\", \"#009fd2\", \"#0077dd\",\n                       \"#004fe9\", \"#0027f4\", \"#0000ff\", \"#3300fa\",\n                       \"#6600f4\", \"#9900ee\", \"#cc00e9\", \"#e900cc\",\n                       \"#ee0099\", \"#f40066\", \"#fa0033\")\n    __esc = (\" \", \"\\\\\", \"{\", \"}\", \"#\", \"$\", \"%\", \"&\", \"_\")\n    __forbidchar = (\"^\", \"~\")\n    __origText = \"\"\n    __rainbowText = \"\"\n\n    def __init__(self, inputText) -> None:\n        self.__origText = inputText\n\n    def rainbow(self, mathrm=1) -> str:\n\n        self.__rainbowText += \"$\"\n        strlen = len(self.__origText)\n        i = color = 0\n\n        while i < strlen:\n\n            if self.__origText[i] in self.__forbidchar:\n                i += 1\n                continue\n\n            self.__rainbowText += (self.__prefix +\n                                   self.__rainbowColors[color % len(self.__rainbowColors)] +\n                                   self.__joint +\n                                   self.__mathpref[mathrm])\n\n            if self.__origText[i] in self.__esc:\n                self.__rainbowText += \"\\\\\"\n\n            self.__rainbowText += self.__origText[i] + \\\n                self.__postfix[mathrm] + \"\\n\"\n            i += 1\n            color += 1\n\n        self.__rainbowText += \"$\"\n        return self.__rainbowText\n\n\nYourRainbowText = input(\"Your text to be rainbowed: \")\nmathrm = int(input(\"Enable mathrm?(1/0): \"))\nprint(RainbowText(YourRainbowText).rainbow(mathrm))\nos.system(\"pause\")\n```", "timestamp": 1659199980}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 321618, "create_time": 1659267910, "is_blocked": false, "is_tmp": false, "name_id": 5, "text": "请问是怎么操作的呀？在命令行获取彩色字之后复制粘贴过来吗？", "timestamp": 1659267910}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 321863, "create_time": 1659278338, "is_blocked": false, "is_tmp": false, "name_id": 0, "text": "Re Eve: 对，从$开始（包括$）到$结束（包括$）", "timestamp": 1659278338}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 321869, "create_time": 1659278489, "is_blocked": false, "is_tmp": false, "name_id": 0, "text": "Re Eve: 注意提示\n```\n/**\n* @author : GoodNullName\n* @note : input your words, choose the format,\n    and copy the output to where supports md &LaTeX\n* @version : 1.0.0 add a forbidden char '~', fixed some bugs\n             1.2.0 supported char '^' and '~', supported auto-linefeed\n             1.5.0 supported autocopy to clipboard\n*/\n#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <windows.h>\nusing namespace std;\n\nconst string prefix = \"\\\\color{\";\nconst string joint = \"}{\";\nconst string postfix[2] = {\"}\", \"}}\"};\nconst string math_pref[2] = {\"\", \"\\\\mathrm{\"};\nvector<string> colors = {\"#ff0000\", \"#f42700\", \"#e94f00\", \"#dd7700\",\n                         \"#d29f00\", \"#b6b800\", \"#88c400\", \"#5bcf00\",\n                         \"#2ddb00\", \"#00e600\", \"#00db2d\", \"#00cf5b\",\n                         \"#00c488\", \"#00b8b6\", \"#009fd2\", \"#0077dd\",\n                         \"#004fe9\", \"#0027f4\", \"#0000ff\", \"#3300fa\",\n                         \"#6600f4\", \"#9900ee\", \"#cc00e9\", \"#e900cc\",\n                         \"#ee0099\", \"#f40066\", \"#fa0033\"};\nvector<char> esc_char = {' ', '\\\\', '{', '}', '#', '$', '%', '&', '_'};\nconst char ctrl_char[2] = {'^', '~'};\nconst int line_size = 29;\n\nstring RainbowText(string origin_text, bool mathrm);\nvoid AddToCpy(string str);\n\nint main()\n{\n    string origin_text;\n    string rainbow_text;\n    string cmathrm;\n    int mathrm = 1;\n\n    cout << \"Your text: \";\n    getline(cin, origin_text);\n\n    cout << \"Enable mathrm?(y/n): \";\n    getline(cin, cmathrm);\n\n    if (cmathrm == \"n\" || cmathrm == \"N\")\n    {\n        mathrm = 0;\n    }\n\n    rainbow_text = RainbowText(origin_text, mathrm);\n    cout << \"----------Rainbow text code begin----------\" << endl;\n    cout << rainbow_text << endl;\n    cout << \"-----------Rainbow text code end-----------\" << endl;\n    AddToCpy(rainbow_text);\n    cin.get();\n    return 0;\n}\n\nstring RainbowText(string origin_text, bool mathrm)\n{\n    string rainbow_text = \"$\";\n    if (origin_text.length() > line_size)\n    {\n        rainbow_text += \"\\\\begin{aligned}\\n&\";\n    }\n\n    for (int i = 0; i < origin_text.length(); i++)\n    {\n        if (!(i % line_size) && i != 0)\n        {\n            rainbow_text += \"\\\\\\\\&\";\n        }\n        \n        rainbow_text +=  prefix + colors[i % colors.size()] +\n                         joint + math_pref[mathrm];\n\n        auto Finder = [origin_text, i](char c) -> bool\n        { return origin_text[i] == c; };\n\n        if (origin_text[i] == ctrl_char[0])\n        {\n            rainbow_text += \"\\\\wedge\";\n        }\n        else if (origin_text[i] == ctrl_char[1])\n        {\n            rainbow_text += \"\\\\sim\";\n        }\n        else\n        {\n            if (any_of(esc_char.begin(), esc_char.end(), Finder))\n            {\n                rainbow_text += \"\\\\\";\n            }\n            rainbow_text += origin_text[i];\n        }\n        rainbow_text += postfix[mathrm] + \"\\n\";\n    }\n    if (origin_text.length() > line_size)\n    {\n        rainbow_text += \"\\\\end{aligned}\\n\";\n    }\n    rainbow_text[rainbow_text.length() - 1] = '$';\n    return rainbow_text;\n}\n\nvoid AddToCpy(string str)\n{\n    HGLOBAL hClip;\n    if (OpenClipboard(NULL))\n    {\n        EmptyClipboard();   //relax, it won't clear all, just current content\n        hClip = GlobalAlloc(GMEM_MOVEABLE, str.length() + 1);\n        char *buff = (char *)GlobalLock(hClip);\n        strcpy(buff, str.c_str());\n        GlobalUnlock(hClip);\n        SetClipboardData(CF_TEXT, hClip);\n        CloseClipboard();\n        cout << \"Already copied to the clipboard.\";\n    }\n    else\n    {\n    cout << \"Failed to open clipboard, please copy it manually.\";        \n    }\n}\n```", "timestamp": 1659278489}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 321902, "create_time": 1659279780, "is_blocked": false, "is_tmp": false, "name_id": 0, "text": "Python版更新\n```\n# @author: GoodNullName\n# @note: input your words, choose the format,\n#        and copy the output to where supports md&LaTeX\n# @version: 1.2.0 add a forbidden char '~', fixed some bugs\n#           1.3.0 remove forbid_char, support '^' and '~'\n#           1.3.5 some small modifications\n#           1.3.6 automatically copy to clipboard\nimport os\nimport pyperclip\n\n# global str variable\nYourRainbowText = \"\"\n\n\nclass RainbowText:\n\n    __prefix = \"\\\\color{\"\n    __joint = \"}{\"\n    __postfix = (\"}\", \"}}\")\n    __mathpref = (\"\", \"\\\\mathrm{\")\n    __rainbowColors = (\"#ff0000\", \"#f42700\", \"#e94f00\", \"#dd7700\",\n                       \"#d29f00\", \"#b6b800\", \"#88c400\", \"#5bcf00\",\n                       \"#2ddb00\", \"#00e600\", \"#00db2d\", \"#00cf5b\",\n                       \"#00c488\", \"#00b8b6\", \"#009fd2\", \"#0077dd\",\n                       \"#004fe9\", \"#0027f4\", \"#0000ff\", \"#3300fa\",\n                       \"#6600f4\", \"#9900ee\", \"#cc00e9\", \"#e900cc\",\n                       \"#ee0099\", \"#f40066\", \"#fa0033\")\n    __esc = {\" \": \"\\\\ \", \"\\\\\": \"\\\\\\\\\", \"{\": \"\\\\{\",\n             \"}\": \"\\\\}\", \"#\": \"\\\\#\", \"$\": \"\\\\$\",\n             \"%\": \"\\\\%\", \"&\": \"\\\\&\", \"_\": \"\\\\_\",\n             \"^\": \"\\\\wedge\", \"~\": \"\\\\sim\"}\n    __origText = \"\"\n    __rainbowText = \"\"\n\n    def __init__(self, inputText) -> None:\n        self.__origText = inputText\n\n    def rainbow(self, mathrm=1) -> str:\n\n        self.__rainbowText += \"$\"\n        strlen = len(self.__origText)\n\n        for i in range(strlen):\n            self.__rainbowText += (self.__prefix +\n                                   self.__rainbowColors[i % len(self.__rainbowColors)] +\n                                   self.__joint +\n                                   self.__mathpref[mathrm])\n\n            if self.__origText[i] in self.__esc:\n                self.__rainbowText += self.__esc[self.__origText[i]]\n            else:\n                self.__rainbowText += self.__origText[i]\n            self.__rainbowText += self.__postfix[mathrm] + \"\\n\"\n\n        else:\n            self.__rainbowText += \"$\"\n        return self.__rainbowText\n\n\nYourRainbowText = input(\"Your text to be rainbowed: \")\nmathrm = int(input(\"Enable mathrm?(1/0): \"))\nprint(\"--------Rainbow Text Code Begin--------\")\nprint(RainbowText(YourRainbowText).rainbow(mathrm))\nprint(\"---------Rainbow Text Code End---------\")\npyperclip.copy(RainbowText(YourRainbowText).rainbow(mathrm))\nprint(\"Already copied to clipboard.\")\ninput()\n```", "timestamp": 1659279780}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 321929, "create_time": 1659280443, "is_blocked": false, "is_tmp": false, "name_id": 6, "text": "Re 洞主: 谢谢dz", "timestamp": 1659280443}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 321948, "create_time": 1659280843, "is_blocked": false, "is_tmp": false, "name_id": 6, "text": "$\\color{#ff0000}{\\mathrm{1}}\n\\color{#f42700}{\\mathrm{2}}\n\\color{#e94f00}{\\mathrm{3}}\n$", "timestamp": 1659280843}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 321950, "create_time": 1659280922, "is_blocked": false, "is_tmp": false, "name_id": 6, "text": "$\\color{#ff0000}{\\mathrm{h}}\n\\color{#f42700}{\\mathrm{e}}\n\\color{#e94f00}{\\mathrm{l}}\n\\color{#dd7700}{\\mathrm{l}}\n\\color{#d29f00}{\\mathrm{o}}\n\\color{#b6b800}{\\mathrm{\\ }}\n\\color{#88c400}{\\mathrm{w}}\n\\color{#5bcf00}{\\mathrm{o}}\n\\color{#2ddb00}{\\mathrm{r}}\n\\color{#00e600}{\\mathrm{l}}\n\\color{#00db2d}{\\mathrm{d}}\n$", "timestamp": 1659280922}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 321953, "create_time": 1659280985, "is_blocked": false, "is_tmp": false, "name_id": 6, "text": "$\\color{#ff0000}{h}\n\\color{#f42700}{e}\n\\color{#e94f00}{l}\n\\color{#dd7700}{l}\n\\color{#d29f00}{o}\n\\color{#b6b800}{\\ }\n\\color{#88c400}{w}\n\\color{#5bcf00}{o}\n\\color{#2ddb00}{r}\n\\color{#00e600}{l}\n\\color{#00db2d}{d}\n\\color{#00cf5b}{\\ }\n\\color{#00c488}{1}\n\\color{#00b8b6}{2}\n\\color{#009fd2}{3}\n\\color{#0077dd}{\\ }\n\\color{#004fe9}{\\sim}\n\\color{#0027f4}{\\wedge}\n\\color{#0000ff}{\\sim}\n$", "timestamp": 1659280985}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 321992, "create_time": 1659282357, "is_blocked": false, "is_tmp": false, "name_id": 0, "text": "Re Francis: yes, 但是还不支持中文，可以先用相同数量的字母占位，然后替换，不太适合长句子😣", "timestamp": 1659282357}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 322061, "create_time": 1659284002, "is_blocked": false, "is_tmp": false, "name_id": 5, "text": "Re 洞主: 谢谢dz！", "timestamp": 1659284002}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 322137, "create_time": 1659286852, "is_blocked": false, "is_tmp": false, "name_id": 0, "text": "https://gitee.com/sunnycloudyang/Gadgets持续更新", "timestamp": 1659286852}], "create_time": 1659195205, "cw": null, "hot_score": null, "is_blocked": false, "is_reported": null, "is_tmp": false, "last_comment_time": 1659286852, "likenum": 15, "n_attentions": 15, "n_comments": 21, "pid": 90981, "poll": null, "reply": 21, "text": "$\\color{#ff0000}{\\mathrm{T}}\n\\color{#f42700}{\\mathrm{h}}\n\\color{#e94f00}{\\mathrm{i}}\n\\color{#dd7700}{\\mathrm{s}}\n\\color{#d29f00}{\\mathrm{\\ }}\n\\color{#b6b800}{\\mathrm{i}}\n\\color{#88c400}{\\mathrm{s}}\n\\color{#5bcf00}{\\mathrm{\\ }}\n\\color{#2ddb00}{\\mathrm{p}}\n\\color{#00e600}{\\mathrm{r}}\n\\color{#00db2d}{\\mathrm{o}}\n\\color{#00cf5b}{\\mathrm{d}}\n\\color{#00c488}{\\mathrm{u}}\n\\color{#00b8b6}{\\mathrm{c}}\n\\color{#009fd2}{\\mathrm{e}}\n\\color{#0077dd}{\\mathrm{d}}\n\\color{#004fe9}{\\mathrm{\\ }}\n\\color{#0027f4}{\\mathrm{b}}\n\\color{#0000ff}{\\mathrm{y}}\n\\color{#3300fa}{\\mathrm{\\ }}\n\\color{#6600f4}{\\mathrm{C}}\n\\color{#9900ee}{\\mathrm{+}}\n\\color{#cc00e9}{\\mathrm{+}}\n\\color{#e900cc}{\\mathrm{.}}$", "timestamp": 1659195205}}