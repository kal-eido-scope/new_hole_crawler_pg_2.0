{"code": 0, "data": {"allow_search": true, "attention": false, "author_title": null, "blocked": false, "blocked_count": null, "can_del": false, "comments": [{"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 320646, "create_time": 1659195320, "is_blocked": false, "is_tmp": false, "name_id": 1, "text": "System.out.println(“This is produced by C++”);", "timestamp": 1659195320}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 320654, "create_time": 1659195514, "is_blocked": false, "is_tmp": false, "name_id": 2, "text": "std::cout << \"This is produced by C++\" << std::endl;", "timestamp": 1659195514}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 320677, "create_time": 1659196161, "is_blocked": false, "is_tmp": false, "name_id": 0, "text": "$\\color{#ff0000}{\\mathrm{B}}\\color{#f42700}{\\mathrm{u}}\\color{#e94f00}{\\mathrm{t}}\\color{#dd7700}{\\mathrm{\\ }}\\color{#d29f00}{\\mathrm{C}}\\color{#b6b800}{\\mathrm{h}}\\color{#88c400}{\\mathrm{i}}\\color{#5bcf00}{\\mathrm{n}}\\color{#2ddb00}{\\mathrm{e}}\\color{#00e600}{\\mathrm{s}}\\color{#00db2d}{\\mathrm{e}}\\color{#00cf5b}{\\mathrm{\\ }}\\color{#00c488}{\\mathrm{i}}\\color{#00b8b6}{\\mathrm{s}}\\color{#009fd2}{\\mathrm{\\ }}\\color{#0077dd}{\\mathrm{s}}\\color{#004fe9}{\\mathrm{t}}\\color{#0027f4}{\\mathrm{i}}\\color{#0000ff}{\\mathrm{l}}\\color{#3300fa}{\\mathrm{l}}\\color{#6600f4}{\\mathrm{\\ }}\\color{#9900ee}{\\mathrm{n}}\\color{#cc00e9}{\\mathrm{o}}\\color{#e900cc}{\\mathrm{t}}\\color{#ee0099}{\\mathrm{\\ }}\\color{#f40066}{\\mathrm{s}}\\color{#fa0033}{\\mathrm{u}}\\color{#ff0000}{\\mathrm{p}}\\color{#f42700}{\\mathrm{p}}\\color{#e94f00}{\\mathrm{o}}\\color{#dd7700}{\\mathrm{r}}\\color{#d29f00}{\\mathrm{t}}\\color{#b6b800}{\\mathrm{e}}\\color{#88c400}{\\mathrm{d}}\\color{#5bcf00}{\\mathrm{.}}$", "timestamp": 1659196161}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 320699, "create_time": 1659197077, "is_blocked": false, "is_tmp": false, "name_id": 3, "text": "来个源码？我正好和Python那个对比一下", "timestamp": 1659197077}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 320704, "create_time": 1659197297, "is_blocked": false, "is_tmp": false, "name_id": 0, "text": "```\n#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nstring prefix = \"\\\\color{\";\nstring joint = \"}{\";\nstring postfix[] = {\"}\", \"}}\"};\nstring math_pref[] = {\"\", \"\\\\mathrm{\"};\nvector<string> colors = {\"#ff0000\", \"#f42700\", \"#e94f00\", \"#dd7700\",\n                         \"#d29f00\", \"#b6b800\", \"#88c400\", \"#5bcf00\",\n                         \"#2ddb00\", \"#00e600\", \"#00db2d\", \"#00cf5b\",\n                         \"#00c488\", \"#00b8b6\", \"#009fd2\", \"#0077dd\",\n                         \"#004fe9\", \"#0027f4\", \"#0000ff\", \"#3300fa\",\n                         \"#6600f4\", \"#9900ee\", \"#cc00e9\", \"#e900cc\",\n                         \"#ee0099\", \"#f40066\", \"#fa0033\"};\nvector<char> esc_char = {' ', '\\\\', '{', '}', '#', '$', '%', '&', '_'};\nvector<char> forbid_char = {'^'};\n\nint main()\n{\n    string origin_text;\n    string rainbow_text = \"$\";\n\n    string cmathrm;\n    int mathrm = 1;\n\n    cout << \"Your text: \";\n    getline(cin, origin_text);\n\n    cout << \"Enable mathrm?(y/n): \";\n    getline(cin, cmathrm);\n\n    if (cmathrm == \"n\" || cmathrm == \"N\")\n    {\n        mathrm = 0;\n    }\n\n    for (int i = 0; i < origin_text.length(); i++)\n    {\n        rainbow_text += (prefix + colors[i % colors.size()] +\n                         joint + math_pref[mathrm]);\n\n        auto Finder = [origin_text, i](char c) -> bool\n        { return origin_text[i] == c; };\n\n        if (any_of(forbid_char.begin(), forbid_char.end(), Finder))\n        {\n            i++;\n        }\n        if (any_of(esc_char.begin(), esc_char.end(), Finder))\n        {\n            rainbow_text += \"\\\\\";\n        }\n        rainbow_text += origin_text[i] + postfix[mathrm] + \"\\n\";\n    }\n    rainbow_text[rainbow_text.length() - 1] = '$';\n    cout << \"Rainbow text code:\" << endl << rainbow_text << endl;\n    system(\"pause\");\n    return 0;\n}\n```", "timestamp": 1659197297}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 320705, "create_time": 1659197323, "is_blocked": false, "is_tmp": false, "name_id": 0, "text": "写的比较笨，献丑了", "timestamp": 1659197323}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 320720, "create_time": 1659197802, "is_blocked": false, "is_tmp": false, "name_id": 0, "text": "这个^和~不太好处理，还有点问题", "timestamp": 1659197802}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 320751, "create_time": 1659198715, "is_blocked": false, "is_tmp": false, "name_id": 0, "text": "```\n#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nstring prefix = \"\\\\color{\";\nstring joint = \"}{\";\nstring postfix[] = {\"}\", \"}}\"};\nstring math_pref[] = {\"\", \"\\\\mathrm{\"};\nvector<string> colors = {\"#ff0000\", \"#f42700\", \"#e94f00\", \"#dd7700\",\n                         \"#d29f00\", \"#b6b800\", \"#88c400\", \"#5bcf00\",\n                         \"#2ddb00\", \"#00e600\", \"#00db2d\", \"#00cf5b\",\n                         \"#00c488\", \"#00b8b6\", \"#009fd2\", \"#0077dd\",\n                         \"#004fe9\", \"#0027f4\", \"#0000ff\", \"#3300fa\",\n                         \"#6600f4\", \"#9900ee\", \"#cc00e9\", \"#e900cc\",\n                         \"#ee0099\", \"#f40066\", \"#fa0033\"};\nvector<char> esc_char = {' ', '\\\\', '{', '}', '#', '$', '%', '&', '_'};\nvector<char> forbid_char = {'^', '~'};\n\nint main()\n{\n    string origin_text;\n    string rainbow_text = \"$\";\n\n    string cmathrm;\n    int mathrm = 1;\n\n    cout << \"Your text: \";\n    getline(cin, origin_text);\n\n    cout << \"Enable mathrm?(y/n): \";\n    getline(cin, cmathrm);\n\n    if (cmathrm == \"n\" || cmathrm == \"N\")\n    {\n        mathrm = 0;\n    }\n\n    int color = 0;\n    for (int i = 0; i < origin_text.length(); i++)\n    {\n        auto Finder = [origin_text, i](char c) -> bool\n        { return origin_text[i] == c; };\n\n        if (any_of(forbid_char.begin(), forbid_char.end(), Finder))\n        {\n            continue;\n        }\n\n        rainbow_text += (prefix + colors[j % colors.size()] +\n                         joint + math_pref[mathrm]);\n\n        if (any_of(esc_char.begin(), esc_char.end(), Finder))\n        {\n            rainbow_text += \"\\\\\";\n        }\n        \n        rainbow_text += origin_text[i] + postfix[mathrm] + \"\\n\";\n        color++;\n    }\n    rainbow_text[rainbow_text.length() - 1] = '$';\n\n    cout << \"Rainbow text code:\" << endl << rainbow_text << endl;\n    system(\"pause\");\n    return 0;\n}\n```", "timestamp": 1659198715}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 320752, "create_time": 1659198760, "is_blocked": false, "is_tmp": false, "name_id": 0, "text": "有些改动", "timestamp": 1659198760}], "create_time": 1659195205, "cw": null, "hot_score": null, "is_blocked": false, "is_reported": null, "is_tmp": false, "last_comment_time": 1659197323, "likenum": 4, "n_attentions": 4, "n_comments": 6, "pid": 90981, "poll": null, "reply": 6, "text": "$\\color{#ff0000}{\\mathrm{T}}\n\\color{#f42700}{\\mathrm{h}}\n\\color{#e94f00}{\\mathrm{i}}\n\\color{#dd7700}{\\mathrm{s}}\n\\color{#d29f00}{\\mathrm{\\ }}\n\\color{#b6b800}{\\mathrm{i}}\n\\color{#88c400}{\\mathrm{s}}\n\\color{#5bcf00}{\\mathrm{\\ }}\n\\color{#2ddb00}{\\mathrm{p}}\n\\color{#00e600}{\\mathrm{r}}\n\\color{#00db2d}{\\mathrm{o}}\n\\color{#00cf5b}{\\mathrm{d}}\n\\color{#00c488}{\\mathrm{u}}\n\\color{#00b8b6}{\\mathrm{c}}\n\\color{#009fd2}{\\mathrm{e}}\n\\color{#0077dd}{\\mathrm{d}}\n\\color{#004fe9}{\\mathrm{\\ }}\n\\color{#0027f4}{\\mathrm{b}}\n\\color{#0000ff}{\\mathrm{y}}\n\\color{#3300fa}{\\mathrm{\\ }}\n\\color{#6600f4}{\\mathrm{C}}\n\\color{#9900ee}{\\mathrm{+}}\n\\color{#cc00e9}{\\mathrm{+}}\n\\color{#e900cc}{\\mathrm{.}}$", "timestamp": 1659195205}}