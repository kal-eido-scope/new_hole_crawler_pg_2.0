{"code": 0, "data": {"allow_search": false, "attention": false, "author_title": null, "blocked": false, "blocked_count": null, "can_del": false, "comments": null, "create_time": 1599581653, "cw": "管理员的长文碎碎念", "hot_score": null, "is_blocked": false, "is_reported": null, "is_tmp": false, "last_comment_time": 1599581653, "likenum": 3, "n_attentions": 3, "n_comments": 5, "pid": 146, "poll": null, "reply": 5, "text": "啊啊啊 今天被问到好几次匿名性的问题了，我统一回复一下吧\n\n>\n\n新T树洞的匿名性在于**把用户和发布的内容隔离**，而非老树洞那样试图把用户和真人隔离。\n新T树洞的匿名性在于**把用户和发布的内容隔离**，而非老树洞那样试图把用户和真人隔离。\n新T树洞的匿名性在于**把用户和发布的内容隔离**，而非老树洞那样试图把用户和真人隔离。\n\n>\n\n实际上我不认为把用户和真人隔离是可行的，毕竟总要验证清华身份，而且要一人一号 。\n\n在新树洞，每个用户后台就是记录为 cs_1，cs_2 这样的（获取到的闭社id）。这是本质实名的，虽然我现在查不到邮箱，但**本质**上这就是实名的。所以像thuhole那样不停地刷怀疑我能拿到闭社的数据是很无聊的事情，不管我能不能拿到，闭社id都是本质实名的。就像T大树洞把用户记录为邮箱的哈希也是本质实名的。\n\n>\n\n真正体现匿名性的是，在新树洞你的任何行为（发洞、回复、关注、举报）都不会绑定到用户上，而是只记录用户名的哈希。这个哈希是基于随机生成、只存在于内存中的盐。每次重启服务这个盐就重新生成了，你之前的任何行为也就和你彻底脱钩了。\n\n当然，这种方案仍然需要基于对后台的信任——信任后台跑的代码和开源代码是一致的。所以新T树洞又额外提供了一个更麻烦但是安全性更好、不需要信任后台的方案：临时token。 #57\n\n最后，如果你真的有方案可以破解安全性——也就是让后台可以还原出发布内容者的真实身份（不管是邮箱还是闭社id还是什么，总之**本质**实名就好），请到 #127给出你的方案和实现，我会把你列入鸣谢名单，或者以其他你希望的方式表达感谢。这对提升树洞的安全性也有极大的帮助。\n\n>\n\n最后的最后，加强匿名性只是新T树洞的一部分（虽然是很重要的一部分），欢迎享受新T树洞的其他特色功能，欢迎享受这个更自主更平等更透明的平台。", "timestamp": 1599581653}}