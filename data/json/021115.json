{"code": 0, "data": {"allow_search": true, "attention": false, "author_title": null, "blocked": false, "blocked_count": null, "can_del": false, "comments": [{"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 57567, "create_time": 1648051816, "is_blocked": false, "is_tmp": false, "name_id": 1, "text": "最早的报时bot好像有公开代码", "timestamp": 1648051816}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 57571, "create_time": 1648051863, "is_blocked": false, "is_tmp": false, "name_id": 0, "text": "Re Alice: 但那个不是回帖的啊", "timestamp": 1648051863}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 57578, "create_time": 1648051973, "is_blocked": false, "is_tmp": false, "name_id": 1, "text": "Re 洞主: 那就不知道了😭", "timestamp": 1648051973}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 57680, "create_time": 1648065428, "is_blocked": false, "is_tmp": false, "name_id": 2, "text": "去把树洞的代码拉下来读两遍就明白了", "timestamp": 1648065428}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 57681, "create_time": 1648065670, "is_blocked": false, "is_tmp": false, "name_id": 2, "text": "思路的话先用getlist读一页50条洞，然后编函数找出符合要求的条目，再用docomment针对符合的发回复，api的用法代码里有。", "timestamp": 1648065670}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 58228, "create_time": 1648121354, "is_blocked": false, "is_tmp": false, "name_id": 3, "text": "Re Alice: \n```\nAPI_ROOT = 'https://t-hole.red/_api/v1/'\ndef post(text:str,token:str)->requests.Response:\n    ‘发布text’\n    POST_URL = API_ROOT + 'dopost'\n    data = {\n        'cw' : '',\n        'text' : text,\n        'allow_search':0,\n        'use_title':0,\n        'type':'text'\n            }\n    headers = {\n        'user-agent':r'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36',\n        'User-Token':token,\n              }\n\n    req = requests.post(url=POST_URL,data=data,headers=headers)\n    return req\n```", "timestamp": 1648121354}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 58229, "create_time": 1648121374, "is_blocked": false, "is_tmp": false, "name_id": 3, "text": "Re Alice:\n```\nAPI_ROOT = 'https://t-hole.red/_api/v1/'\ndef comment(text:str,token:str,pid:int)->requests.Response:\n    '回复pid条text内容'\n    COMMENT_URL = API_ROOT + 'docomment'\n    headers = {\n        'user-agent':r'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36',\n        'User-Token':token,\n              }\n    data = {\n        'pid' : pid,\n        'text' : text,\n        'use_title': ''\n            }\n    \n    req = requests.post(url=COMMENT_URL,data=data,headers=headers)\n    return req\n```", "timestamp": 1648121374}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 58236, "create_time": 1648121980, "is_blocked": false, "is_tmp": true, "name_id": 4, "text": "[tmp]\nRe Carol: Carol太强了", "timestamp": 1648121980}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 58248, "create_time": 1648123398, "is_blocked": false, "is_tmp": false, "name_id": 3, "text": "Re Alice:\n```\nAPI_ROOT = 'https://t-hole.red/_api/v1/'\ndef get_page(page:int,token:str)->dict:\n    '根据page，爬取最新50条，从1开始'\n    header = {'User-Token': token}\n    GET_URL = API_ROOT + f'/getlist?p={page}&order_mode=0'   \n    #mode=0,1,2,3,4是不同模式，最新，最近回复，近期热门，随机\n    #mode>=5都一样，具体哪种可以自己试试\n    r = requests.get(GET_URL,headers=headers)\n    return r.json()\n```", "timestamp": 1648123398}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 58249, "create_time": 1648123421, "is_blocked": false, "is_tmp": false, "name_id": 3, "text": "Re Alice:\n```\nAPI_ROOT = 'https://t-hole.red/_api/v1/'\ndef get_content(pid:int,token:str)->dict:\n    '根据pid获得特定条目的内容'\n    GET_URL = API_ROOT + '/getone?pid=' + str(pid)\n       headers = {'User-Token': token}\n    r = request.get(GET_URL,headers=headers)\n    return r.json()\n```", "timestamp": 1648123421}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 58258, "create_time": 1648123661, "is_blocked": false, "is_tmp": false, "name_id": 3, "text": "没有，就是把自己爬虫写的代码改了改放上来了，可能改出了bug（不是）", "timestamp": 1648123661}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 58262, "create_time": 1648123806, "is_blocked": false, "is_tmp": false, "name_id": 3, "text": "想要粗略定时执行的话，可以用github action托管，因为他的定时误差在前后15分钟左右，报时bot就不能用这个。", "timestamp": 1648123806}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 58264, "create_time": 1648123875, "is_blocked": false, "is_tmp": true, "name_id": 5, "text": "[tmp]\n谢谢Carol", "timestamp": 1648123875}, {"author_title": "", "blocked": false, "blocked_count": null, "can_del": false, "cid": 58274, "create_time": 1648124298, "is_blocked": false, "is_tmp": false, "name_id": 3, "text": "报时bot代码见#2602", "timestamp": 1648124298}], "create_time": 1648051762, "cw": null, "hot_score": null, "is_blocked": false, "is_reported": null, "is_tmp": false, "last_comment_time": 1648124298, "likenum": 16, "n_attentions": 16, "n_comments": 14, "pid": 21115, "poll": null, "reply": 14, "text": "有没有开发bot的教程吗？dz想开发一个根据关键词自动回帖的那种，类似reddit上的bot", "timestamp": 1648051762}}